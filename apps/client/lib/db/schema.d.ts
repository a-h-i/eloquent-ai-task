/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<
  string,
  bigint | number | string,
  bigint | number | string
>;

export type MessageAuthor = 'bot' | 'user';

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Conversation {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  owner_username: string;
  title: string | null;
  updated_at: Generated<Timestamp>;
}

export interface Message {
  author: MessageAuthor;
  content: string;
  conversation_id: string;
  created_at: Generated<Timestamp>;
  id: Generated<Int8>;
  updated_at: Generated<Timestamp>;
}

export interface Profile {
  created_at: Generated<Timestamp>;
  name: string;
  password_hash: string;
  updated_at: Generated<Timestamp>;
  username: string;
}

export interface DB {
  conversation: Conversation;
  message: Message;
  profile: Profile;
}
