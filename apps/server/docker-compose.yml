services:
  eloquent-image:
    build:
      context: ../..
      dockerfile: Dockerfile.testing
    image: eloquent-image
  ai-db:
    image: postgres:18
    command: postgres -c work_mem=8000
    restart: always
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=eloquent_ai_db
    ports:
      - '5435:5432'
    healthcheck:
      interval: 10s
      retries: 5
      test:
        - CMD-SHELL
        - pg_isready
      timeout: 5s
    shm_size: 1gb
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11435:11434"
    mem_limit: 20g
    shm_size: 20gb
  ollama-init:
    image: ollama/ollama:latest
    depends_on: [ ollama ]
    environment:
      - OLLAMA_HOST=http://ollama:11434
    entrypoint: ["/bin/sh","-lc"]
    command: >
      "ollama pull llama2"
    restart: no
  ai-server:
    image: eloquent-image
    depends_on:
      ai-db:
        condition: service_healthy
      eloquent-image:
        condition: service_completed_successfully
      ollama:
        condition: service_started
      ollama-init:
        condition: service_completed_successfully
    ports:
      - '8001:8000'
    volumes:
      - ../../:/app
      - ../../docker-cache/server/.venv:/app/apps/server/.venv
    working_dir: /app/apps/server
    command: >
      bash -c "
      poetry sync && 
      poetry run fastapi dev src/server/main.py --host 0.0.0.0"
    env_file:
      - .env
    environment:
      - DB_HOST=ai-db
      - DB_PORT=5432
      - DB_USER=db_user
      - DB_PASSWORD=password
      - DB_NAME=eloquent_ai_db
      - OLLAMA_HOST=http://ollama:11434